name: "Godot CI/CD"

env:
  GODOT_VERSION: 4.2.2
  PROJECT_NAME: 'ci_example'

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  Web:
    uses: ./.github/workflows/web.yml

  Linux:
    uses: ./.github/workflows/linux.yml

  Windows:
    uses: ./.github/workflows/windows.yml

  release:
    needs: [Web, Linux, Windows]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Get branch name
        id: get_branch
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}_web

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}_linux

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}_windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env.GitVersion_MajorMinorPatch}}
          release_name: ${{env.GitVersion_MajorMinorPatch}}
          body: |
            Release notes for ${{env.GitVersion_MajorMinorPatch}}
          draft: false
          prerelease: true

      - name: Upload Web Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PROJECT_NAME }}_web.zip
          asset_name: "${{ env.PROJECT_NAME }}_web.zip"
          asset_content_type: application/zip

      - name: Upload Linux Release Asset
        id: upload-linux-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PROJECT_NAME }}_linux.zip
          asset_name: "${{ env.PROJECT_NAME }}_linux.zip"
          asset_content_type: application/zip

      - name: Upload Windows Release Asset
        id: upload-windows-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.PROJECT_NAME }}_windows.zip
          asset_name: "${{ env.PROJECT_NAME }}_windows.zip"
          asset_content_type: application/zip
