[gd_scene load_steps=7 format=3 uid="uid://rboxdmiw52pa"]

[ext_resource type="Script" uid="uid://b88f0sm1efc0w" path="res://scripts/objects/bush.gd" id="1_2ck34"]
[ext_resource type="Texture2D" uid="uid://d146ww36e66kt" path="res://assets/map/prop/tall_grass.png" id="2_btshf"]
[ext_resource type="Texture2D" uid="uid://ctqn7ohdkuvgc" path="res://assets/textures/blank_circle_200x200.png" id="3_btshf"]

[sub_resource type="Shader" id="Shader_btshf"]
code = "// original wind shader from https://github.com/Maujoe/godot-simple-wind-shader-2d/tree/master/assets/maujoe.simple_wind_shader_2d
// original script modified by HungryProton so that the assets are moving differently : https://pastebin.com/VL3AfV8D
//
// speed - The speed of the wind movement.
// minStrength - The minimal strength of the wind movement.
// maxStrength - The maximal strength of the wind movement.
// strengthScale - Scalefactor for the wind strength.
// interval - The time between minimal and maximal strength changes.
// detail - The detail (number of waves) of the wind movement.
// distortion - The strength of geometry distortion.
// heightOffset - The height where the wind begins to move. By default 0.0.

shader_type canvas_item;
render_mode blend_mix;

// Wind settings.
uniform float speed = 1.0;
uniform float minStrength : hint_range(0.0, 1.0) = 0.05;
uniform float maxStrength : hint_range(0.0, 1.0) = 0.01;
uniform float strengthScale = 100.0;
uniform float interval = 3.5;
uniform float detail = 1.0;
uniform float distortion : hint_range(0.0, 1.0);
uniform float heightOffset : hint_range(0.0, 1.0);

// With the offset value, you can if you want different moves for each asset. Just put a random value (1, 2, 3) in the editor. Don't forget to mark the material as unique if you use this
uniform float offset = 0; 


float getWind(vec2 vertex, vec2 uv, float time){
    float diff = pow(maxStrength - minStrength, 2.0);
    float strength = clamp(minStrength + diff + sin(time / interval) * diff, minStrength, maxStrength) * strengthScale;
    float wind = (sin(time) + cos(time * detail)) * strength * max(0.0, (1.0-uv.y) - heightOffset);
    
    return wind; 
}

void vertex() {
    vec4 pos = MODEL_MATRIX * vec4(0.0, 0.0, 0.0, 1.0);
    float time = TIME * speed + offset;
    //float time = TIME * speed + pos.x * pos.y  ; not working when moving...
    VERTEX.x += getWind(VERTEX.xy, UV, time);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_dq2p3"]
resource_local_to_scene = true
shader = SubResource("Shader_btshf")
shader_parameter/speed = 1.0
shader_parameter/minStrength = 0.1
shader_parameter/maxStrength = 0.2
shader_parameter/strengthScale = 100.0
shader_parameter/interval = 3.5
shader_parameter/detail = 1.0
shader_parameter/distortion = 0.0
shader_parameter/heightOffset = 0.0
shader_parameter/offset = 0.0

[sub_resource type="RectangleShape2D" id="RectangleShape2D_2ck34"]
size = Vector2(112, 50)

[node name="Bush" type="Node2D"]
script = ExtResource("1_2ck34")

[node name="Shadow" type="Sprite2D" parent="."]
self_modulate = Color(0, 0, 0, 0.407843)
position = Vector2(-2.14577e-06, 8)
scale = Vector2(0.48, 0.16)
texture = ExtResource("3_btshf")

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_dq2p3")
position = Vector2(0, 8)
texture = ExtResource("2_btshf")
offset = Vector2(0, -136)

[node name="Area2D" type="Area2D" parent="."]
collision_layer = 32
collision_mask = 3

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2(0, -15)
shape = SubResource("RectangleShape2D_2ck34")

[connection signal="body_entered" from="Area2D" to="." method="_on_area_2d_body_entered"]
[connection signal="body_exited" from="Area2D" to="." method="_on_area_2d_body_exited"]
